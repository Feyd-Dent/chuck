{"version":3,"sources":["components/Card.js","components/Categories.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","number","cat","joke","style","display","border","padding","justifyContent","margin","src","width","height","alt","Categories","listStyle","flexWrap","App","onCatClick","event","a","setState","catNumber","target","id","catName","innerHTML","componentDidMount","state","jokes","catList","bind","fetch","catObject","json","catArray","this","map","items","i","onClick","cursor","objectReturn","result","value","console","log","textAlign","Number","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8RAceA,EAZF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KACzB,OACI,sBAAKC,MAAO,CAACC,QAAS,OAAQC,OAAQ,oBAAqBC,QAAS,OAAQC,eAAgB,SAAUC,OAAQ,aAA9G,UACI,qBAAKC,IAAG,uEAAkET,EAAlE,QAAgFU,MAAM,OAAOC,OAAO,QAAQC,IAAI,UACxH,gCACI,6BAAKX,IACL,mBAAGE,MAAO,CAACG,QAAS,OAAQI,MAAO,QAAnC,SAA6CR,WCG9CW,G,MARI,SAAC,GAAa,IAAXZ,EAAU,EAAVA,IAClB,OACI,8BACI,6BAAI,oBAAIE,MAAO,CAACW,UAAW,OAAQV,QAAS,OAAQW,SAAU,OAAQR,eAAgB,eAAgBD,QAAS,KAA3G,SAAkHL,UCqDnHe,G,wDApDb,aAAe,IAAD,8BACZ,gBAwBFC,WAzBc,uCAyBD,WAAOC,GAAP,SAAAC,EAAA,sDACX,EAAKC,SAAS,CAACC,UAAWH,EAAMI,OAAOC,KACvC,EAAKH,SAAS,CAACI,QAASN,EAAMI,OAAOG,YACrC,EAAKC,oBAHM,2CAzBC,sDAEZ,EAAKC,MAAQ,CACXC,MAAO,GACPC,QAAS,GACTR,UAAW,EACXG,QAAS,OAEX,EAAKP,WAAa,EAAKA,WAAWa,KAAhB,gBARN,E,4FAWd,yCAAAX,EAAA,+EAG4BY,MAAM,+CAHlC,cAGUC,EAHV,gBAI2BA,EAAUC,OAJrC,cAIUC,EAJV,OAMIC,KAAKf,SAAS,CAACS,QAASK,EAASE,KAAI,SAACC,EAAOC,GAAR,OAAc,oBAAIC,QAAS,EAAKtB,WAAYd,MAAO,CAACqC,OAAQ,YAAalC,QAAS,QAAiBiB,GAAIe,EAAzF,SAA6FD,GAAXC,QANzI,UAQ+BP,MAAM,oDAAD,OAAqDI,KAAKR,MAAMH,UARpG,eAQUiB,EARV,iBASyBA,EAAaR,OATtC,eASUS,EATV,YAUIP,KAVJ,UAUgCO,EAAOC,MAVvC,0BAUmBf,MAVnB,WAUSR,SAVT,kEAWcwB,QAAQC,IAAI,SAAZ,MAXd,0D,0EAqBA,WAAU,IAAD,EAMHV,KAAKR,MAJPC,EAFK,EAELA,MACAC,EAHK,EAGLA,QACAL,EAJK,EAILA,QACAH,EALK,EAKLA,UAEF,OACE,gCACE,gCACE,2FACJ,oBAAIlB,MAAO,CAAC2C,UAAW,UAAvB,qCACF,cAAC,EAAD,CAAY7C,IAAK4B,OAEjB,cAAC,EAAD,CAAM7B,OAAS+C,OAAO1B,GAAY,EAAIpB,IAAKuB,EAAStB,KAAM0B,W,GAhD5CoB,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4ffe0331.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ number, cat, joke }) => {\r\n    return (\r\n        <div style={{display: \"flex\", border: \"5px solid #E6E6FA\", padding: \"2rem\", justifyContent: \"center\", margin: \"5rem auto\"}}>\r\n            <img src={`http://pngimg.com/uploads/chuck_norris/small/chuck_norris_PNG${number}.png`} width=\"auto\" height=\"200px\" alt=\"Chuck\"/>\r\n            <div>\r\n                <h3>{cat}</h3>\r\n                <p style={{padding: \"2rem\", width: \"55ch\"}}>{joke}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './Categories.css'\r\n\r\nconst Categories = ({ cat }) => {\r\n    return (\r\n        <div>\r\n            <h3><ul style={{listStyle: \"none\", display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-evenly\", padding: \"0\"}}>{cat}</ul></h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Categories;","import React, { Component } from 'react';\nimport Card from '../components/Card.js';\nimport Categories from '../components/Categories.js';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      jokes: [],\n      catList: [],\n      catNumber: 0,\n      catName: \"dev\"\n    };\n    this.onCatClick = this.onCatClick.bind(this);\n  };\n  \n  async componentDidMount() {\n    try {\n      //Get Categories\n      const catObject = await fetch('https://api.chucknorris.io/jokes/categories');\n      const catArray = await catObject.json();\n      //Make categories into list\n      this.setState({catList: catArray.map((items, i) => <li onClick={this.onCatClick} style={{cursor: \"crosshair\", padding: \"10px\"}} key={i} id={i}>{items}</li>)});\n      //Get joke from catName\n      const objectReturn = await fetch(`https://api.chucknorris.io/jokes/random?category=${this.state.catName}`);\n      const result = await objectReturn.json();\n      this.setState({jokes: await result.value});\n    } catch(e) {console.log('Ooops!', e)}\n  };\n  \n  onCatClick = async (event) => {\n    this.setState({catNumber: event.target.id});\n    this.setState({catName: event.target.innerHTML});\n    this.componentDidMount();\n  };\n\n  \n  render() {\n    const {\n      jokes,\n      catList,\n      catName,\n      catNumber\n    } = this.state;\n    return (\n      <div>\n        <div>\n          <h1>Chuck Norris Jokes... Like the internet needs any more...</h1>\n      <h2 style={{textAlign: \"center\"}}>Choose your category...</h2>\n    <Categories cat={catList} />\n    </div>\n    <Card number={(Number(catNumber) +1)} cat={catName} joke={jokes} />\n    </div>\n    )\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}